"""update tables

Revision ID: 7866f8d71fec
Revises: bcb73ffa4c43
Create Date: 2023-12-25 16:48:00.617895

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "7866f8d71fec"
down_revision: Union[str, None] = "bcb73ffa4c43"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "advertisement", sa.Column("created_at", sa.TIMESTAMP(), nullable=True)
    )
    op.add_column("advertisement", sa.Column("created_by", sa.Integer(), nullable=True))
    op.drop_constraint(
        "advertisement_user_id_fkey", "advertisement", type_="foreignkey"
    )
    op.create_foreign_key(None, "advertisement", "user", ["created_by"], ["id"])
    op.drop_column("advertisement", "timestamp")
    op.drop_column("advertisement", "user_id")
    op.add_column("review", sa.Column("created_by", sa.Integer(), nullable=True))
    op.drop_constraint("review_user_id_fkey", "review", type_="foreignkey")
    op.create_foreign_key(None, "review", "user", ["created_by"], ["id"])
    op.drop_column("review", "user_id")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "review", sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "review", type_="foreignkey")
    op.create_foreign_key("review_user_id_fkey", "review", "user", ["user_id"], ["id"])
    op.drop_column("review", "created_by")
    op.add_column(
        "advertisement",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "advertisement",
        sa.Column(
            "timestamp", postgresql.TIMESTAMP(), autoincrement=False, nullable=True
        ),
    )
    op.drop_constraint(None, "advertisement", type_="foreignkey")
    op.create_foreign_key(
        "advertisement_user_id_fkey", "advertisement", "user", ["user_id"], ["id"]
    )
    op.drop_column("advertisement", "created_by")
    op.drop_column("advertisement", "created_at")
    # ### end Alembic commands ###
